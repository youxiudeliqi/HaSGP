<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <storm.version>0.9.1-lorenz-SNAPSHOT</storm.version>
    </properties>

	<groupId>ch.uzh.ifi.ddis.stools</groupId>
	<artifactId>stools</artifactId>
    <version>1.7.2-SNAPSHOT</version>
    <modules>
        <module>stools-topos</module>
        <module>stools-core</module>
    </modules>
    <packaging>pom</packaging>

	<name>Streaming Tools</name>

	<scm>
		<!--<connection>scp:git:git@github.com:lorenzfischer/katts.git</connection>
		<url>scm:git://git@github.com:lorenzfischer/katts.git</url>
		<developerConnection>scp:git:git@github.com:lorenzfischer/katts.git</developerConnection>-->
	</scm>

	<distributionManagement>
		<!-- The DDIS Maven2 repository for SNAPSHOT versions -->
		<snapshotRepository>
			<id>ifi-private</id>
			<url>https://maven.ifi.uzh.ch/maven2/content/repositories/private-snapshots</url>
			<name>ifi Internal Snapshot Repository</name>
			<uniqueVersion>true</uniqueVersion>
		</snapshotRepository>
		<!-- The DDIS Maven2 repository for releases -->
		<repository>
			<id>ifi-private</id>
			<url>https://maven.ifi.uzh.ch/maven2/content/repositories/private-releases</url>
			<name>ifi Internal Release Repository</name>
			<uniqueVersion>false</uniqueVersion>
		</repository>
	</distributionManagement>

    <profiles>
        <profile>
            <!-- profile used to build the one-jar -->
            <id>build</id>
            <dependencies>
                <dependency>
                    <groupId>org.apache.storm</groupId>
                    <artifactId>storm-core</artifactId>
                    <version>${storm.version}</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

	<dependencies>
		<dependency>
			<groupId>org.apache.storm</groupId>
			<artifactId>storm-core</artifactId>
			<version>${storm.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<!--<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>3.1.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>13.0.1</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>-->
		<!-- <dependency>
      <groupId>com.twitter.common.zookeeper</groupId>
      <artifactId>map</artifactId>
      <version>0.0.29</version>
    </dependency> -->
    
		<!-- used by the evaluation package 
		<dependency>
			<groupId>com.google.gdata</groupId>
			<artifactId>gdata-core</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.gdata</groupId>
			<artifactId>gdata-spreadsheet</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.gdata</groupId>
			<artifactId>gdata-spreadsheet-meta</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.1</version>
		</dependency>-->

		<!-- <dependency> <groupId>org.infinispan</groupId> <artifactId>infinispan-core</artifactId> <version>5.1.5.FINAL</version> 
			</dependency> <dependency> <groupId>ch.qos.logback</groupId> <artifactId>logback-core</artifactId> <version>1.0.0</version> 
			</dependency> <dependency> <groupId>org.eclipse.persistence</groupId> <artifactId>eclipselink</artifactId> <version>2.4.0</version> 
			</dependency> <dependency> <groupId>org.twitter4j</groupId> <artifactId>twitter4j-core</artifactId> <version>2.2.6</version> 
			</dependency> <dependency> <groupId>org.twitter4j</groupId> <artifactId>twitter4j-stream</artifactId> <version>2.2.6</version> 
			</dependency> <dependency> <groupId>com.googlecode.json-simple</groupId> <artifactId>json-simple</artifactId> <version>1.1</version> 
			</dependency> -->

	</dependencies>


	<build>
		<sourceDirectory>src/main/java</sourceDirectory>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering> <!-- replace instances of ${variableName} with the correpsonding values. -->
				<excludes>
				  <exclude>storm.yaml</exclude> <!-- don't bundle storm.yaml with jar. -->
				</excludes>
			</resource>

			<!-- include jaxb index files -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.index</include>
				</includes>
			</resource>

		</resources>

		<plugins>
			<!-- bind the maven-assembly-plugin to the package phase this will create a jar file without the storm dependencies suitable 
				for deployment to a cluster. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass />
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<!-- Needed for Releases -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.2</version>
			</plugin>

		</plugins>
	</build>

	<repositories>
		<!--<repository>
			<id>github-releases</id>
			<url>http://oss.sonatype.org/content/repositories/github-releases/</url>
		</repository>
		<repository>
			<id>clojars.org</id>
			<url>http://clojars.org/repo</url>
		</repository>
		<repository>
			<id>twitter4j</id>
			<url>http://twitter4j.org/maven2</url>
		</repository> -->
		<!-- <repository>
      <id>twitter-commons</id> has zookeepermap 
      <url>http://maven.twttr.com/</url>
    </repository>
		<repository>
			<id>EclipseLink Repo</id>
			<url>http://www.eclipse.org/downloads/download.php?r=1&amp;nf=1&amp;file=/rt/eclipselink/maven.repo</url>
		</repository>
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>-->
		
		<!--
			Dirty workaround for libs not available through maven.
			Copied the libraries into the project folder and linking to it locally.
		
		<repository>
			<id>project.local</id>
			<name>project</name>
			<url>file:${project.basedir}/repo</url>
		</repository>
		-->
	</repositories>
</project>
